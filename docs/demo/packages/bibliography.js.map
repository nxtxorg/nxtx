{"version":3,"file":"bibliography.js","sources":["../../../src/packages/bibliography.js"],"sourcesContent":["/*  Bibliography package for nxtx\r\n    requires:\r\n    - basic-formatting (newpage)\r\n    Author: Malte Rosenbjerg\r\n    License: MIT */\r\n\r\nconst entries = {};\r\nlet cited = [];\r\n\r\nconst style = document.createElement(\"style\");\r\nstyle.id = 'bibliography-style-block';\r\ndocument.head.appendChild(style);\r\n\r\n// Default\r\nstyle.sheet.insertRule('.bib-entry { margin-bottom: 5px }', 0);\r\nstyle.sheet.insertRule(`.bib-entry span { margin-right: 5px }`, 1);\r\n\r\n\r\n\r\nconst formatAuthors = author => {\r\n    const authors = author.value.split(' and ').map(a => {\r\n        const split = a.split(',');\r\n        if (split.length > 1) a = split[1].trim() + ' ' + split[0];\r\n        const names = a.split(' ').filter(n => n[0] === n[0].toUpperCase());\r\n        const lastname = names[names.length - 1];\r\n        names.length -= 1;\r\n        return names.map(n => n[0] + '.').join(' ') + ' ' + lastname;\r\n    }).join(', ');\r\n    return nxtx.html('span', { class: 'bib bib-author' }, authors + '.');\r\n};\r\n\r\nconst entryFieldFormatting = {\r\n    author: formatAuthors,\r\n    year: year => nxtx.html('span', { class: 'bib bib-year' }, `(${year.value}).`),\r\n    title: title => nxtx.html('span', { class: 'bib bib-title' }, `“${title.value}”.`),\r\n    url: url => nxtx.html('a', { class: 'bib bib-url', href: url.value, target: '_blank' }, url.value),\r\n    isbn: isbn => nxtx.html('span', { class: 'bib bib-isbn' }, `ISBN: ${isbn.value}.`)\r\n};\r\n\r\nnxtx.on('prerender', () => cited = []);\r\n\r\nconst pkg = {\r\n    name: 'basic-formatting',\r\n    commands: {\r\n        'cite': async (...args) => {\r\n            const cites = args.flatMap(arg => {\r\n                let index = cited.indexOf(arg.value);\r\n                if (index === -1) {\r\n                    cited.push(arg.value);\r\n                    index = cited.length - 1;\r\n                }\r\n                const e = nxtx.htmlLite('a', { href: `#---${arg.value}`});\r\n                e.innerText = index + 1;\r\n                return [ e, ', ' ];\r\n            });\r\n            cites.length -= 1;\r\n            return nxtx.html('span', null, '[', ...cites, ']');\r\n        },\r\n        'bib-print': async () => {\r\n            const citedEntries = cited.map(e => entries[e] || console.warn(`Bibliography entry '${e}' not found`)).filter(f => !!f);\r\n            if (citedEntries.length === 0) {\r\n                return;\r\n            }\r\n            const mapped = citedEntries.map((entryFields, number) => nxtx.html('div', { id: `---${cited[number]}`, class: 'bib bib-entry'},\r\n                nxtx.html('span', { class: 'bib bib-ordering'}, `[${number + 1}]`),\r\n                ...Object.keys(entryFieldFormatting)\r\n                    .filter(k => entryFields[k] !== undefined)\r\n                    .map(k => entryFieldFormatting[k](entryFields[k]))\r\n            ));\r\n            return [\r\n                { type: nxtx.TYPE.COMMAND, name: 'pagebreak', args: [] },\r\n                nxtx.html('h2', {class: 'bibliography'}, 'Bibliography'),\r\n                ...mapped\r\n            ];\r\n        }\r\n    },\r\n    preprocessors: {\r\n        'bib-add': (key, entry) => {\r\n            if (!entry || entry.type !== nxtx.TYPE.DICTIONARY) return console.error('bib-add only must have a dictionary as second argument');\r\n            entries[key.value] = entry.value;\r\n        },\r\n    }\r\n};\r\n\r\nif (nxtx) {\r\n    Object.keys(pkg.commands).forEach(name => nxtx.registerCommand(name, pkg.commands[name]));\r\n    Object.keys(pkg.preprocessors).forEach(name => nxtx.registerPreprocessor(name, pkg.preprocessors[name]));\r\n}\r\n\r\nexport default pkg;"],"names":["entries","cited","style","document","createElement","id","head","appendChild","sheet","insertRule","entryFieldFormatting","author","authors","value","split","map","a","length","trim","names","filter","n","toUpperCase","lastname","join","nxtx","html","class","year","title","url","href","target","isbn","on","pkg","name","commands","cite","async","args","cites","flatMap","arg","index","indexOf","push","e","htmlLite","innerText","bib-print","citedEntries","console","warn","f","mapped","entryFields","number","Object","keys","k","undefined","type","TYPE","COMMAND","preprocessors","bib-add","key","entry","DICTIONARY","error","forEach","registerCommand","registerPreprocessor"],"mappings":"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"}