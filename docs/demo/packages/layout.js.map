{"version":3,"file":"layout.js","sources":["../../../src/nxtx-types.ts","../../../src/packages/layout.ts"],"sourcesContent":["export interface Node {\r\n    type: NodeType,\r\n    value?: any,\r\n    name?: string,\r\n    args?: Array<Node>\r\n}\r\nexport enum NodeType {\r\n    Paragraph = 1,\r\n    Command,\r\n    Text,\r\n    Block,\r\n    Html,\r\n    Node,\r\n    Dictionary = 11,\r\n    Array,\r\n    Number,\r\n    String\r\n}\r\n\r\nexport interface ArgumentCheck {\r\n    expected: NodeType,\r\n    actual: NodeType,\r\n    index: number\r\n}\r\nexport interface ArgumentCheckResult {\r\n    ok: boolean,\r\n    invalid: Array<ArgumentCheck>\r\n}\r\n\r\ntype CommandResultTypes = Node | HTMLElement | Text | undefined | void\r\ntype CommandResultType = Promise<CommandResultTypes> | CommandResultTypes\r\nexport type CommandResult = Array<CommandResultType> | CommandResultType\r\nexport type CommandFunction = (...args:Array<Node>) => CommandResult\r\n\r\nexport interface Package {\r\n    name: string,\r\n    requires?: Array<string>,\r\n    commands?: { [name:string]: CommandFunction },\r\n    preprocessors?: { [name:string]: CommandFunction },\r\n    hooks?: { prerender?:()=>void, postrender?:()=>void }\r\n}\r\n\r\nexport interface INxtx {\r\n    registerCommand: (cmd:string, fn:CommandFunction, overwrite?:boolean) => void\r\n    registerPreprocessor: (cmd:string, fn:CommandFunction, overwrite?:boolean) => void\r\n    verifyArguments: (types:Array<NodeType>, ...args:Array<Node>) => ArgumentCheckResult\r\n    registerPackage: (pkg:Package) => void\r\n\r\n    parse: (code:string) => Array<Node>\r\n    render: (code:string, root:HTMLElement) => Promise<void>\r\n\r\n    text: (content:string) => Text\r\n    htmlLite: (nodeName:string, attributes:object, ...children:Array<HTMLElement|string>) => HTMLElement\r\n    html: (nodeName:string, attributes:object, ...children:Array<Promise<HTMLElement|Node|string>|HTMLElement|Node|string>) => Promise<HTMLElement>\r\n\r\n    on: (event:string, handler:()=>void) => void\r\n    off: (event:string, handler:()=>void) => void\r\n}","/*  Layout package for nxtx\n    Author: Thomas Gwynfryn McCollin\n    License: MIT */\n\nimport {NodeType, Package, INxtx} from '../nxtx-types';\ndeclare const nxtx: INxtx;\n\nconst style = document.createElement(\"style\");\nstyle.id = 'layout-style-block';\ndocument.head.appendChild(style);\nconst sheet = <CSSStyleSheet> style.sheet;\n\nconst parse = argNode => {\n    if (argNode.type !== NodeType.Number) return argNode.value;\n    return argNode.value + 'mm';\n};\n\nconst replaceRule = (newRule, ruleIndex)=> {\n    if (sheet.deleteRule) sheet.deleteRule(ruleIndex);\n    else if (sheet.removeRule) sheet.removeRule(ruleIndex);\n    sheet.insertRule(newRule, ruleIndex);\n};\n\nconst marginFormatters = {\n    all: value => { replaceRule(`.sheet { padding: ${value} }`, 1) },\n    left: value => { replaceRule(`.sheet { padding-left: ${value} }`, 1) },\n    top: value => { replaceRule(`.sheet { padding-top: ${value} }`, 1) },\n    right: value => { replaceRule(`.sheet { padding-right: ${value} }`, 1) },\n    bottom: value => { replaceRule(`.sheet { padding-bottom: ${value} }`, 1) },\n    vertical: value => { replaceRule(`.sheet { padding-top: ${value}; padding-bottom: ${value} }`, 1) },\n    horizontal: value => { replaceRule(`.sheet { padding-left: ${value}; padding-right: ${value} }`, 1) },\n\n    'head-separator': value => { sheet.insertRule(`header { margin-bottom: ${value}`, 2) },\n    'foot-skip': value => { sheet.insertRule(`footer { margin-top: ${value}`, 3) },\n};\n\n// Default\nsheet.insertRule('@page { size: A4 }', 0);\nsheet.insertRule(`.sheet { padding: 2cm }`, 1);\nsheet.insertRule('header { height: 3cm }', 2);\nsheet.insertRule('footer { height: 3cm }', 3);\n\nconst pkg : Package = {\n    name: 'layout',\n    commands: {\n        'set-paper-size': paperSizeNode => replaceRule(`@page { size: ${paperSizeNode} }`, 0),\n        'set-header': heightNode => replaceRule(`header {height: ${heightNode}mm`, 2),\n        'set-footer': heightNode => replaceRule(`footer {height: ${heightNode}mm`, 3)\n    },\n    preprocessors: {\n        'set-margin': dictNode => Object.keys(dictNode.value).forEach(key => marginFormatters[key](parse(dictNode.value[key])))\n    }\n};\n\nif (nxtx) nxtx.registerPackage(pkg);\n\nexport default pkg;"],"names":[],"mappings":"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"}