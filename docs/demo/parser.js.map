{"version":3,"file":"parser.js","sources":["../../src/parser.js"],"sourcesContent":["/*  NxTx parser and renderer\r\n    Author: Malte Rosenbjerg\r\n    License: MIT */\r\n\r\nimport parser from '../grammar.pegjs';\r\n\r\nconst commands = {};\r\nconst preprocessors = {};\r\nconst executeCommand = async (cmd, args) => {\r\n    if (commands[cmd] !== undefined)\r\n        return await commands[cmd](...(await Promise.all(args.map(arg => arg.type === 'command' ? executeCommand(arg.name, arg.args) : arg))));\r\n    console.warn(`Command '${cmd}' not registered`);\r\n    return await html('b', {class: \"error\"}, `${cmd}?`);\r\n};\r\n\r\nconst register = cmdCollection => (cmd, fn, overwrite = false) => {\r\n    if (!overwrite && cmdCollection[cmd] !== undefined)\r\n        return console.warn(`Command '${cmd}' is already registered. Set overwrite to true, if you need to overwrite the already registered command.`);\r\n    cmdCollection[cmd] = fn;\r\n};\r\nexport const registerCommand = register(commands);\r\nexport const registerPreprocessor = register(preprocessors);\r\n\r\nexport const verifyTypes = (types, ...args) => {\r\n    const invalidTypes = args\r\n        .map((actual, index) => ({expected: types[index], actual, index}))\r\n        .filter(type => type.expected !== type.actual);\r\n    return { ok: invalidTypes.length === 0, invalid: invalidTypes }\r\n};\r\nexport const parse = text => parser.parse(text).map(mergeText);\r\n\r\nconst noMerge = { '.': true, ',': true };\r\nconst mergeText = pNode => {\r\n    const textNodes = [];\r\n    const mergedNodes = pNode.value.reduce((acc, node) => {\r\n        if (node.type === 'text') {\r\n            if (noMerge[node.value[0]]) {\r\n                acc.push({ type: 'text', value: node.value[0] + ' ' });\r\n                if (node.value.length !== 1) textNodes.push({ type: 'text', value: node.value.substr(1) });\r\n            }\r\n            else textNodes.push(node);\r\n        } else {\r\n            if (textNodes.length) {\r\n                acc.push({ type: 'text', value: textNodes.map(n => n.value).join(' ') });\r\n                textNodes.length = 0;\r\n            }\r\n            acc.push(node);\r\n        }\r\n        return acc;\r\n    }, []);\r\n    if (textNodes.length)\r\n        mergedNodes.push({ type: 'text', value: textNodes.map(n => n.value).join(' ') });\r\n    return { type: pNode.type, value: mergedNodes };\r\n};\r\n\r\n\r\nconst truthy = e => !!e;\r\nconst asyncFlatMap = async (elements, fn) => (await Promise.all(elements.map(fn))).flat();\r\n\r\nconst baseRenderNode = async node => {\r\n    if (node.split) return document.createTextNode(node);\r\n    if (!node.type) return node;\r\n    switch (node.type) {\r\n        case 'node':\r\n            return node;\r\n        case 'block':\r\n            return await asyncFlatMap(node.value, baseRenderNode);\r\n        case 'paragraph':\r\n            const pNodes = await asyncFlatMap(node.value, baseRenderNode);\r\n            if (pNodes.length) pNodes.push(htmlLite('div', { class: 'paragraph-break' }));\r\n            return pNodes;\r\n        case 'html':\r\n            return htmlLite('span', { innerHTML: node.value });\r\n        case 'text':\r\n            return document.createTextNode(node.value);\r\n        case 'command':\r\n            const result = [ await executeCommand(node.name, node.args) ].flat().filter(truthy);\r\n            return await asyncFlatMap(result, baseRenderNode);\r\n    }\r\n    console.error(node);\r\n};\r\n\r\nconst executePreprocessors = async paragraphs => {\r\n    for (let i = 0; i < paragraphs.length; i++) {\r\n        const paragraph = paragraphs[i];\r\n        const processed = await asyncFlatMap(paragraph.value, async node => {\r\n            if (node.type === 'command' && preprocessors[node.name]) {\r\n                await preprocessors[node.name](...node.args);\r\n                if (commands[node.name] === undefined) return;\r\n            }\r\n            return node;\r\n        });\r\n        paragraph.value = processed.filter(truthy);\r\n    }\r\n};\r\n\r\nexport const render = async (text, root) => {\r\n    while (root.firstChild) root.removeChild(root.firstChild);\r\n    let page = 0, currentPage;\r\n    const newPage = () => {\r\n        root.appendChild(currentPage = htmlLite('section', { id: `page-${++page}`, class: 'sheet', 'data-page': page }));\r\n        currentPage.appendChild(htmlLite('div', { class: 'meta page-start' }));\r\n    };\r\n    newPage();\r\n    const place = node => {\r\n        currentPage.appendChild(node);\r\n        if (currentPage.scrollHeight > currentPage.clientHeight) {\r\n            newPage();\r\n            currentPage.appendChild(node);\r\n        }\r\n    };\r\n    trigger('prerender');\r\n    const paragraphs = parse(text);\r\n    await executePreprocessors(paragraphs);\r\n    for (let i = 0; i < paragraphs.length; i++) {\r\n        const children = await baseRenderNode(paragraphs[i]);\r\n        children.forEach(place);\r\n    }\r\n    trigger('postrender');\r\n};\r\nexport const htmlLite = (nodeName, attributes) => {\r\n    let n = document.createElement(nodeName);\r\n    Object.keys(attributes || {}).forEach(k => n.setAttribute(k, attributes[k]));\r\n    return n;\r\n};\r\nexport const html = async (nodeName, attributes, ...children) => {\r\n    const n = htmlLite(nodeName, attributes);\r\n    for (let i = 0; i < children.length; i++) n.appendChild(await baseRenderNode(children[i]));\r\n    return n;\r\n};\r\n\r\nconst hooks = { prerender: [], postrender: [] };\r\nconst trigger = event => (hooks[event] || []).forEach(fn => fn());\r\nexport const on = (event, handler) => {\r\n    if (!hooks[event].includes(handler)) hooks[event].push(handler);\r\n};\r\nexport const off = (event, handler) => {\r\n    const index = hooks[event].indexOf(handler);\r\n    if (index !== -1) hooks[event].splice(index, 1);\r\n};"],"names":[],"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"}